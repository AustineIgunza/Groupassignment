// One large interface with too many responsibilities
interface UserOperations {
    void browseBooks();
    void placeOrder();
    void manageUsers();
}

// Guest is forced to implement unnecessary methods
class Guest implements UserOperations {
    public void browseBooks() {
        System.out.println("Guest is browsing books.");
    }

    public void placeOrder() {
        // Not applicable to guests
        throw new UnsupportedOperationException("Guest cannot place orders.");
    }

    public void manageUsers() {
        // Not applicable to guests
        throw new UnsupportedOperationException("Guest cannot manage users.");
    }
}

// Customer also forced to implement manageUsers
class Customer implements UserOperations {
    public void browseBooks() {
        System.out.println("Customer is browsing books.");
    }

    public void placeOrder() {
        System.out.println("Customer placed an order.");
    }

    public void manageUsers() {
        // Not applicable to customers
        throw new UnsupportedOperationException("Customer cannot manage users.");
    }
}
