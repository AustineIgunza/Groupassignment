// Interfaces are split by responsibility
interface Browsable {
    void browseBooks();
}

interface Orderable {
    void placeOrder();
}

interface AdminManageable {
    void manageUsers();
}

// Guest only browses books
class Guest implements Browsable {
    public void browseBooks() {
        System.out.println("Guest is browsing books.");
    }
}

// Customer browses and places orders
class Customer implements Browsable, Orderable {
    public void browseBooks() {
        System.out.println("Customer is browsing books.");
    }

    public void placeOrder() {
        System.out.println("Customer placed an order.");
    }
}

// Admin does everything
class Admin implements Browsable, Orderable, AdminManageable {
    public void browseBooks() {
        System.out.println("Admin is browsing books.");
    }

    public void placeOrder() {
        System.out.println("Admin placed an order.");
    }

    public void manageUsers() {
        System.out.println("Admin managing users.");
    }
}
